[[plugins]] # denite
repo = 'Shougo/denite.nvim'
depends = 'neomru.vim'
on_cmd = 'Denite'
hook_add = '''
    nnoremap [denite] <Nop>
    nmap <Leader>d [denite]
    nnoremap <silent> [denite]h :<C-u>Denite file_mru<CR>
    nnoremap <silent> [denite]g :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
    nnoremap <silent> [denite]r :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
    nnoremap <silent> [denite]f :<C-u>Denite file_rec<CR>
    nnoremap <silent> [denite]l :<C-u>Denite line<CR>

    nnoremap sT :<C-u>Denite tab<CR>
    nnoremap sb :<C-u>Denite buffer_tab -buffer-name=file<CR>
    nnoremap sB :<C-u>Denite buffer -buffer-name=file<CR>
'''
hook_post_source = '''
    call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
    call denite#custom#var('grep', 'command', ['ag'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'default_opts', ['--follow', '--no-group', '--no-color'])
'''

[[plugins]] # deoplete
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_i = 1
hook_source = '''
    call deoplete#enable()
    inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \ "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''

[[plugins]] # neosnippet
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_add = '''
    imap <C-k> <Plug>(neosnippet_jump_or_expand)
    smap <C-k> <Plug>(neosnippet_jump_or_expand)
    xmap <C-k> <Plug>(neosnippet_expand_target)
'''
hook_source = '''
    let g:neosnippet#enable_snipmate_compatibility = 1
    let g:neosnippet#enable_completed_snippet = 1
    let g:neosnippet#expand_word_boundary = 1
'''

[[plugins]] # snippet
repo = 'Shougo/neosnippet-snippets'

[[plugins]] # neomru
repo = 'Shougo/neomru.vim'
on_source = 'Denite.nvim'

[[plugins]] # filetype
repo = 'Shougo/context_filetype.vim'

[[plugins]] # vimproc
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]] # browser
repo = 'tyru/open-browser.vim'

[[plugins]] # submode
repo = 'kana/vim-submode'
hook_post_source = '''
    call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
    call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
    call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
    call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
    call submode#map('bufmove', 'n', '', '>', '<C-w>>')
    call submode#map('bufmove', 'n', '', '<', '<C-w><')
    call submode#map('bufmove', 'n', '', '+', '<C-w>+')
    call submode#map('bufmove', 'n', '', '-', '<C-w>-')
'''

[[plugins]] # nerdtree
repo = 'scrooloose/nerdtree'
depends = ['vim-nerdtree-syntax-highlight', 'vim-devicons']
hook_add = '''
    nnoremap [nerdtree] <Nop>
    nmap     <Leader>n [nerdtree]
    nnoremap <silent>[nerdtree]n :NERDTree<CR>
    nnoremap <silent>[nerdtree]f :NERDTreeFind<CR>
'''

[[plugins]] # nerdtree highlight
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
    nnoremap [gitgutter] <Nop>
    nmap     <Leader>g [gitgutter]
    nnoremap <silent>[gitgutter] :GitGutterToggle<CR>
    let g:NERDTreeLimitedSyntax = 1
'''

[[plugins]] # fugitive
repo = 'tpope/vim-fugitive'

[[plugins]] # gitgutter
repo = 'airblade/vim-gitgutter'
hook_add = '''
    let g:gitgutter_enabled = 0
'''

[[plugins]] # ALE
repo = 'w0rp/ale'
depends = 'vim-devicons'
hook_add = '''
    let g:ale_set_loclist = 0
    let g:ale_set_quickfix = 1
    let g:ale_sign_error = "\uf057"
    let g:ale_sign_warning = "\uf06a"
    let g:ale_statusline_format = ["\uf057 %d", "\uf06a %d", "\uf058"]
    let g:ale_echo_msg_error_str = 'E'
    let g:ale_echo_msg_warning_str = 'W'
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_open_list = 1
    let g:ale_lint_on_enter = 0
    let g:ale_lint_on_text_changed = 0
    let g:ale_linters= {
    \   'c': 'gcc',
    \   'cpp': 'g++',
    \}
'''

[[plugins]] # LaTeX
repo = 'lervag/vimtex'
on_ft = ['tex', 'plaintex']

[[plugins]] # c snippet
repo = 'Shougo/deoplete-clangx'
on_ft = ['c', 'cpp']

[[plugins]] # python snippet
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]] # go snippet
repo = 'zchee/deoplete-go'
on_i = 1
on_ft = 'go'

[[plugins]] # go syntax
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]] # slim syntax
repo = 'slim-template/vim-slim'
on_ft = 'slim'

[[plugins]] # HTML5 syntax
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]] # javascript syntax
repo = 'othree/yajs.vim'
on_ft = 'javascript'

[[plugins]] # jsx syntax
repo = 'maxmellon/vim-jsx-pretty'
on_ft = 'javascript'

[[plugins]] # markdown syntax
repo = 'rcmdnk/vim-markdown'
on_ft = ['md', 'markdown']
hook_source = ''' "
    let g:vim_markdown_folding_disabled = 1
'''
[[plugins]] # markdown preview
repo = 'kannokanno/previm'
depends = 'open-browser.vim'
on_ft = ['md', 'markdown']
hook_source = '''
    let g:previm_enable_realtime = 1
'''

[[plugins]] # Toml syntax
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # YAML syntax
repo = 'chase/vim-ansible-yaml'
on_ft = 'yaml'

[[plugins]] # gnuplot syntax
repo = 'vim-scripts/gnuplot.vim'
on_ft = 'gp'
